find_program(GLSLC_COMPILER glslc HINTS ENV VULKAN_SDK)
if(NOT GLSLC_COMPILER)
    message(FATAL_ERROR "glslc compiler not found!")
endif()

set(SHADER_SRC_DIR ${CMAKE_CURRENT_SOURCE_DIR}/shaders)
set(SHADER_SPV_DIR ${CMAKE_CURRENT_BINARY_DIR}/shaders)

file(MAKE_DIRECTORY ${SHADER_SPV_DIR})
file(GLOB_RECURSE SHADER_SOURCES_VERT CONFIGURE_DEPENDS  "${SHADER_SRC_DIR}/*.vert")
file(GLOB_RECURSE SHADER_SOURCES_FRAG CONFIGURE_DEPENDS "${SHADER_SRC_DIR}/*.frag")

set(SHADER_SOURCE_FILES ${SHADER_SOURCES_VERT} ${SHADER_SOURCES_FRAG})

set(SHADER_COMPILE_FLAGS "")
string(TOLOWER "${CMAKE_BUILD_TYPE}" BUILD_TYPE_LOWER)
if (BUILD_TYPE_LOWER STREQUAL "debug")
    set(SHADER_COMPILE_FLAGS "-g")
else()
    set(SHADER_COMPILE_FLAGS "-O")
endif ()

set(SHADER_SPV_FILES "")
foreach (SHADER_SRC ${SHADER_SOURCE_FILES})

    get_filename_component(SHADER_NAME ${SHADER_SRC} NAME_WE)
    get_filename_component(SHADER_EXT ${SHADER_SRC} EXT)

    string(REPLACE "." "" SHADER_EXT_TRIM ${SHADER_EXT})

    set(SHADER_SPV ${SHADER_SPV_DIR}/${SHADER_NAME}_${SHADER_EXT_TRIM}.spv)
    list(APPEND SHADER_SPV_FILES ${SHADER_SPV})

    add_custom_command(
            OUTPUT ${SHADER_SPV}
            COMMAND ${GLSLC_COMPILER} ${SHADER_COMPILE_FLAGS} ${SHADER_SRC} -o ${SHADER_SPV}
            DEPENDS ${SHADER_SRC}
            COMMENT "Compiling ${SHADER_SRC} to ${SHADER_SPV} with flags ${SHADER_COMPILE_FLAGS}"
            VERBATIM
    )
endforeach ()

add_custom_target(SHADER_COMPILATION ALL DEPENDS ${SHADER_SPV_FILES} ${SHADER_SOURCE_FILES})